spring:
  application:
    name: gemini-upms
  profiles:
    active: dev
    include: cloud
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://docker-server:3306/gemini_upms?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: root
    password: root
  data:
    redis:
      host: docker-server
      port: 6379
      database: 7
      timeout: 10000
  cache:
    type: redis
    redis:
      cache-null-values: true
      key-prefix: "gemini-upms:cache:"
      time-to-live: 1000
  kafka:
    bootstrap-servers: docker-server:19092
    consumer:
      group-id: gemini-upms
      auto-offset-reset: latest
      enable-auto-commit: false
      auto-commit-interval: 100ms
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 100
      properties:
        session.timeout.ms: 30000
        max.poll.interval.ms: 300000
    listener:
      type: single
      concurrency: 8
      ack-mode: manual_immediate
      poll-timeout: 1000
    producer:
      acks: all
      retries: 0
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        linger.ms: 1
        session.timeout.ms: 30000
gemini:
  open-api:
    enabled: true
    info:
      version: "0.0.1-SNAPSHOT"
      title: "Gemini UPMS Boot"
      description: "用户权限服务"
      contact:
        name: "Gemini UPMS"
        email: "gemini@glseven.com"
        url: "https://www.glseven.com"
      license:
        name: "Apache License 2.0"
        url: "https://www.apache.org/licenses/LICENSE-2.0.html"
        identifier: "Apache-2.0"
  redis:
    cache:
      - cache-name: "demo-service:vo"
        time-to-live: 3600000
server:
  port: 8083